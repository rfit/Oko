# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-and-test:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          working_directory:  ~/repo/client
          keys:
            - v1-dependencies-{{ checksum "client/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          working_directory:  ~/repo/client
          command: yarn install

      - save_cache:
          working_directory:  ~/repo/client
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "client/package.json" }}

      # run tests!
      - run:
          working_directory:  ~/repo/client
          command: yarn test --coverage

      # Build client
      - run:
          working_directory: ~/repo/client
          command: yarn build

      - persist_to_workspace:
          root: ~/repo
          paths:
            - client
            - server

  push-images:
    environment:
      CLIENT_REPO: 242728147184.dkr.ecr.eu-central-1.amazonaws.com/oko-app/client
      VERSION: '1.0'

    docker:
      - image: tstrohmeier/awscli:3.7.2

    steps:
      - setup_remote_docker

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="19.03.4"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Build client docker image
          working_directory: /tmp/workspace/client
          command: |
            docker build -t oko-app/client .
            $(aws ecr get-login --no-include-email --region eu-central-1)
            export BUILD_ID=$VERSION-$CIRCLE_BUILD_NUM
            docker tag oko-app/client:latest $CLIENT_REPO:$BUILD_ID
            docker tag oko-app/client:latest $CLIENT_REPO:latest
            docker push $CLIENT_REPO:$BUILD_ID
            docker push $CLIENT_REPO:latest

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test
      - push-images:
          requires:
            - build-and-test